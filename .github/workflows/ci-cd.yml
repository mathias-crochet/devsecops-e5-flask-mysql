name: CI/CD Secure Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
      
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask-mysql:latest ./app

      - name: Trivy Scan (Docker image)
        uses: aquasecurity/trivy-action@0.16.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/flask-mysql:latest'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL'

      - name: Trivy Scan (Filesystem - Code & Dependencies)
        uses: aquasecurity/trivy-action@0.16.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL'

      - name: Snyk - Scan Python dependencies
        uses: snyk/actions/python@master
        with:
          args: --file=app/requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk - Scan Docker image (web)
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk - Scan Docker image (MySQL)
        uses: snyk/actions/docker@master
        with:
          image: mysql:8.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-mysql:latest
